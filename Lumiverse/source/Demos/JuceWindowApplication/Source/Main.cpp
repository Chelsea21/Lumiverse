/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include "../JuceLibraryCode/JuceHeader.h"
#include "../../../LumiverseCore/LumiverseCore.h"

#include "RenderingWindow.h"
#include "RepaintTimer.h"

using namespace Lumiverse;

//==============================================================================
class JuceWindowAppApplication  : public JUCEApplication
{
public:
    //==============================================================================
    JuceWindowAppApplication() {}

    const String getApplicationName() override       { return ProjectInfo::projectName; }
    const String getApplicationVersion() override    { return ProjectInfo::versionString; }
    bool moreThanOneInstanceAllowed() override       { return true; }

    //==============================================================================
    void initialise (const String& commandLine) override
    {
        // Add your application's initialisation code here..
        m_rig = new Rig("/afs/andrew.cmu.edu/usr1/chenxil/Documents/Lumiverse/Lumiverse/data/arnold.json");
        
        m_rig->init();
        
        ArnoldPatch *patch = (ArnoldPatch*)m_rig->getPatch("arnold");
        
        m_renderingWindow = new RenderingWindow(patch->getWidth(), patch->getHeight(), patch->getBufferPointer());
        
        m_timer = new RepaintTimer(m_renderingWindow->getContentComponent());
        m_timer->startTimer(5000);
        
        m_rig->run();
    }

    void shutdown() override
    {
        // Add your application's shutdown code here..
        m_timer->stopTimer();
        
        m_timer = nullptr;
        m_renderingWindow = nullptr;
        m_rig = nullptr;
    }

    //==============================================================================
    void systemRequestedQuit() override
    {
        // This is called when the app is being asked to quit: you can ignore this
        // request and let the app carry on running, or call quit() to allow the app to close.
        quit();
    }

    void anotherInstanceStarted (const String& commandLine) override
    {
        // When another instance of the app is launched while this one is running,
        // this method is invoked, and the commandLine parameter tells you what
        // the other instance's command-line arguments were.
    }
    
private:
    ScopedPointer<RenderingWindow> m_renderingWindow;
    ScopedPointer<Rig> m_rig;
    ScopedPointer<RepaintTimer> m_timer;
};

//==============================================================================
// This macro generates the main() routine that launches the app.
START_JUCE_APPLICATION (JuceWindowAppApplication)
